#!/usr/bin/env python3
# pylint: disable=invalid-name

import getpass
import subprocess

import click
import jenkins


JOBS = ['ping', 'tarballs-release', 'release_packages']


def parse_pass_lines(lines):
    for line in lines:
        if not line.startswith('#') and ': ' in line:
            yield line.split(': ', 1)


def get_pass(name):
    try:
        output = subprocess.check_output(['pass', 'show', name], universal_newlines=True)
    except subprocess.CalledProcessError:
        return None, {}

    lines = output.splitlines()
    if not lines:
        return None, {}

    password = lines[0]
    extras = {key: value for key, value in parse_pass_lines(lines[1:])}
    return password, extras


def get_connection(url='https://ci.theforeman.org', username=None,
                   password=None, pass_name='theforeman/jenkins-token'):
    if not password or not username:
        pass_password, pass_extras = get_pass(pass_name)

        if not password:
            password = pass_password

        if not username:
            try:
                username = pass_extras['Username']
            except KeyError:
                username = getpass.getuser()

    return jenkins.Jenkins(url, username=username, password=password)


@click.command()
@click.argument('job', type=click.Choice(JOBS))
@click.argument('version')
def build(job, version):
    """
    Build a job"
    """
    server = get_connection()

    if job == 'ping':
        user = server.get_whoami()
        version = server.get_version()
        click.echo('Hello %s from Jenkins %s' % (user['fullName'], version))
        return

    major, minor, _ = version.split('.', 2)
    parameters = {
        'version': version,
        'major_version': f'{major}.{minor}',
    }

    server.build_job(job, parameters)

    # We don't just get a job ID back - probably because it can be queued
    last_build_number = server.get_job_info(job)['lastBuild']['number']
    build_info = server.get_build_info(job, last_build_number)
    click.echo(build_info)


if __name__ == '__main__':
    build()  # pylint: disable=no-value-for-parameter
